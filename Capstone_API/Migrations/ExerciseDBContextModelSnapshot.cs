// <auto-generated />
using Exercise.Data.EF_DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Capstone_API.Migrations
{
    [DbContext(typeof(ExerciseDBContext))]
    partial class ExerciseDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Capstone_API.Data.Entities.Building", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name");

                    b.Property<string>("ShortName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ShortName");

                    b.HasKey("Id");

                    b.ToTable("Building");
                });

            modelBuilder.Entity("Capstone_API.Data.Entities.Distance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Building1Id")
                        .HasColumnType("int")
                        .HasColumnName("Building1Id");

                    b.Property<int>("Building2Id")
                        .HasColumnType("int")
                        .HasColumnName("Building2Id");

                    b.Property<int>("DistanceBetween")
                        .HasColumnType("int")
                        .HasColumnName("DistanceBetween");

                    b.HasKey("Id");

                    b.ToTable("Distance");
                });

            modelBuilder.Entity("Capstone_API.Data.Entities.Lecturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int")
                        .HasColumnName("OrderNumber");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int")
                        .HasColumnName("SemesterId");

                    b.Property<string>("ShortName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ShortName");

                    b.HasKey("Id");

                    b.ToTable("Lecturer");
                });

            modelBuilder.Entity("Capstone_API.Data.Entities.LecturerRegister", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("LecturerId")
                        .HasColumnType("int")
                        .HasColumnName("LecturerId");

                    b.Property<string>("Note")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Note");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int")
                        .HasColumnName("SemesterId");

                    b.Property<int>("SlotId")
                        .HasColumnType("int")
                        .HasColumnName("SlotId");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("SubjectId");

                    b.HasKey("Id");

                    b.ToTable("LecturerRegister");
                });

            modelBuilder.Entity("Capstone_API.Data.Entities.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("InputType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("InputType");

                    b.Property<int>("MinimizeCostOfTimeSettingLevel")
                        .HasColumnType("int")
                        .HasColumnName("MinimizeCostOfTimeSettingLevel");

                    b.Property<int>("MinimizeNumberOfSubjectsSettingLevel")
                        .HasColumnType("int")
                        .HasColumnName("MinimizeNumberOfSubjectsSettingLevel");

                    b.Property<int>("PreferenceLevelOfSlotSettingLevel")
                        .HasColumnType("int")
                        .HasColumnName("PreferenceLevelOfSlotSettingLevel");

                    b.Property<int>("PreferenceLevelOfSubjectSettingLevel")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int")
                        .HasColumnName("QuotaOfClassSettingLevel");

                    b.Property<int>("PriorityMovingDistanceSettingLevel")
                        .HasColumnType("int")
                        .HasColumnName("PriorityMovingDistanceSettingLevel");

                    b.Property<int>("QuotaOfClassSettingLevel")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int")
                        .HasColumnName("QuotaOfClassSettingLevel");

                    b.Property<string>("Solver")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Solver");

                    b.Property<string>("Strategy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Strategy");

                    b.HasKey("Id");

                    b.ToTable("Model");
                });

            modelBuilder.Entity("Capstone_API.Data.Entities.Semester", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.ToTable("Semester");
                });

            modelBuilder.Entity("Capstone_API.Data.Entities.SlotDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("NumberOfSlots")
                        .HasColumnType("int")
                        .HasColumnName("NumberOfSlots");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int")
                        .HasColumnName("SemesterId");

                    b.HasKey("Id");

                    b.ToTable("SlotDay");
                });

            modelBuilder.Entity("Capstone_API.Data.Entities.SlotPreferenceLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("LecturerId")
                        .HasColumnType("int")
                        .HasColumnName("LecturerId");

                    b.Property<int>("PreferenceLevel")
                        .HasColumnType("int")
                        .HasColumnName("PreferenceLevel");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int")
                        .HasColumnName("SemesterId");

                    b.Property<int>("SlotId")
                        .HasColumnType("int")
                        .HasColumnName("SlotId");

                    b.HasKey("Id");

                    b.ToTable("SlotPreferenceLevel");
                });

            modelBuilder.Entity("Capstone_API.Data.Entities.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Code");

                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Department");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int")
                        .HasColumnName("OrderNumber");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int")
                        .HasColumnName("SemesterId");

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("Capstone_API.Data.Entities.SubjectPreferenceLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("LecturerId")
                        .HasColumnType("int")
                        .HasColumnName("LecturerId");

                    b.Property<int>("PreferenceLevel")
                        .HasColumnType("int")
                        .HasColumnName("PreferenceLevel");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int")
                        .HasColumnName("SemesterId");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("SubjectId");

                    b.HasKey("Id");

                    b.ToTable("SubjectPreferenceLevel");
                });

            modelBuilder.Entity("Capstone_API.Data.Entities.TaskAssign", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BuildingId")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int")
                        .HasColumnName("SemesterId");

                    b.Property<int>("ClassId")
                        .HasColumnType("int")
                        .HasColumnName("ClassId");

                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Department");

                    b.Property<string>("Room1")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Slot2");

                    b.Property<string>("Room2")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Slot2");

                    b.Property<int>("SemesterId")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("int")
                        .HasColumnName("SemesterId");

                    b.Property<string>("Slot1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Slot1");

                    b.Property<string>("Slot2")
                        .ValueGeneratedOnUpdateSometimes()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Slot2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("Status");

                    b.Property<int>("SubjectId")
                        .HasColumnType("int")
                        .HasColumnName("SubjectId");

                    b.Property<int>("TimeSlotId")
                        .HasColumnType("int")
                        .HasColumnName("TimeSlotId");

                    b.HasKey("Id");

                    b.ToTable("TaskAssign");
                });

            modelBuilder.Entity("Capstone_API.Data.Entities.TimeSlot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int")
                        .HasColumnName("OrderNumber");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int")
                        .HasColumnName("SemesterId");

                    b.HasKey("Id");

                    b.ToTable("TimeSlot");
                });

            modelBuilder.Entity("Capstone_API.Data.Entities.TimeSlotCompatibility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CompatibilityLevel")
                        .HasColumnType("int")
                        .HasColumnName("CompatibilityLevel");

                    b.Property<int>("CompatibilitySlotId")
                        .HasColumnType("int")
                        .HasColumnName("CompatibilitySlotId");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int")
                        .HasColumnName("SemesterId");

                    b.Property<int>("SlotId")
                        .HasColumnType("int")
                        .HasColumnName("SlotId");

                    b.HasKey("Id");

                    b.ToTable("TimeSlotCompatibility");
                });

            modelBuilder.Entity("Capstone_API.Data.Entities.TimeSLotConflict", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Conflict")
                        .HasColumnType("bit")
                        .HasColumnName("Conflict");

                    b.Property<int>("ConflictSlotId")
                        .HasColumnType("int")
                        .HasColumnName("ConflictSlotId");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int")
                        .HasColumnName("SemesterId");

                    b.Property<int>("SlotId")
                        .HasColumnType("int")
                        .HasColumnName("SlotId");

                    b.HasKey("Id");

                    b.ToTable("TimeSLotConflict");
                });

            modelBuilder.Entity("Exercise.Data.Entities.Class", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Classes");
                });
#pragma warning restore 612, 618
        }
    }
}
